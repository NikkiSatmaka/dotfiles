# suffix aliases (needs Zsh >= 4.*).  Suffix aliases allow the shell
# to run a command on a file by suffix, e.g 'alias -s ps=gv' makes
# 'foo.ps' execute 'gv foo.ps'.
if [[ $ZSH_VERSION == 5.<->* ]]; then
    # some "file aliases"
    alias -s {ogg,flac,mpg,mpeg,avi,ogm,wmv,m4v,mp4,mov}="mplayer -idx"
    alias -s {ogg,flac,mpg,mpeg,avi,ogm,wmv,m4v,mp4,mov}="mpv"
    alias -s {jpg,JPG,jpeg,JPEG,png,PNG,gif,GIF}="mirage"
    alias -s dvi=xdvi
    alias -s pdf=xpdf
    alias -s ps=gv
    alias -s {htm,html,php,com,net,org,gov}="pick-web-browser"
    alias -s tex=${EDITOR:-vi}
    alias -s txt=${PAGER:-less}
    # some global aliases for redirection
    alias -g N="&>/dev/null"
    alias -g 1N="1>/dev/null"
    alias -g 2N="2>/dev/null"
    alias -g DN="/dev/null"
    alias -g PI="|"
    # Paging with less / head / tail
    alias -g LS='| less -S'
    alias -g EL='|& less'
    alias -g ELS='|& less -S'
    alias -g TRIM='| cut -c 1-$COLUMNS'
    alias -g H='| head'
    alias -g HL='| head -n $(( +LINES ? LINES - 4 : 20 ))'
    alias -g EH='|& head'
    alias -g EHL='|& head -n $(( +LINES ? LINES - 4 : 20 ))'
    alias -g TL='| tail -n $(( +LINES ? LINES - 4 : 20 ))'
    alias -g ET='|& tail'
    alias -g ETL='|& tail -n $(( +LINES ? LINES - 4 : 20 ))'
    # Sorting / counting
    alias -g C='| wc -l'
    alias -g SS='| sort'
    alias -g Su='| sort -u'
    alias -g Sn='| sort -n'
    alias -g Snr='| sort -nr'
    # grep(1)'ing
    for switches in {,i}{,l,L}{,r}{,v}; do
        eval "alias -g  GG$switches='| egrep ${switches:+-$switches}'"
        eval "alias -g EG$switches='|& egrep ${switches:+-$switches}'"
        eval "alias -g XG$switches='| xargs egrep ${switches:+-$switches}'"
        eval "alias -g X0G$switches='| xargs -0 egrep ${switches:+-$switches}'"
    done
    # awk
    alias -g A1="| awk '{print \$1}'"
    alias -g A2="| awk '{print \$2}'"
    alias -g A3="| awk '{print \$3}'"
    alias -g A4="| awk '{print \$4}'"
    alias -g A5="| awk '{print \$5}'"
    alias -g A6="| awk '{print \$6}'"
    alias -g A7="| awk '{print \$7}'"
    alias -g A8="| awk '{print \$8}'"
    alias -g A9="| awk '{print \$9}'"
    alias -g EA='|& awk '
    alias -g EA1="|& awk '{print \$1}'"
    alias -g EA2="|& awk '{print \$2}'"
    alias -g EA3="|& awk '{print \$3}'"
    alias -g EA4="|& awk '{print \$4}'"
    alias -g EA5="|& awk '{print \$5}'"
    alias -g EA6="|& awk '{print \$6}'"
    alias -g EA7="|& awk '{print \$7}'"
    alias -g EA8="|& awk '{print \$8}'"
    alias -g EA9="|& awk '{print \$9}'"
fi

export HISTORY_IGNORE="(ls|cd|pwd|exit|sudo reboot|history|cd -|cd ..)"

# Automatically cd into typed directory.
setopt autocd

# Initialize editing command line
autoload -U edit-command-line && zle -N edit-command-line

# Enable interactive comments (# on the command line)
setopt interactivecomments

# Nicer history
HISTSIZE=10000
HISTDIR="${XDG_DATA_HOME:-$HOME/.local/share}/zsh"
HISTFILE="${XDG_DATA_HOME:-$HOME/.local/share}/zsh/history"
[[ ! -d $HISTDIR ]] && command mkdir -p "$HISTDIR"
SAVEHIST=$HISTSIZE
setopt appendhistory
setopt incappendhistory
setopt extendedhistory

# Time to wait for additional characters in a sequence
KEYTIMEOUT=1 # corresponds to 10ms

# * Keybindings
bindkey -v

# for "leader" keybindings
bindkey -a -r t

ssource ~/.config/zsh/interactive_vi_mode

# load .inputrc
#eval "$(sed -rn 's/^([^#].*?): (.*)$/bindkey \1 \2/p' ~/.inputrc)"

# ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern)

# if [[ "$(tput colors)" == "256" ]]; then
#     ZSH_HIGHLIGHT_STYLES[default]=none
#     ZSH_HIGHLIGHT_STYLES[unknown-token]=fg=160
#     ZSH_HIGHLIGHT_STYLES[reserved-word]=fg=037,bold #,standout
#     ZSH_HIGHLIGHT_STYLES[alias]=fg=064,bold
#     ZSH_HIGHLIGHT_STYLES[builtin]=fg=064,bold
#     ZSH_HIGHLIGHT_STYLES[function]=fg=064,bold
#     ZSH_HIGHLIGHT_STYLES[command]=fg=064,bold
#     ZSH_HIGHLIGHT_STYLES[precommand]=fg=064,underline
#     ZSH_HIGHLIGHT_STYLES[commandseparator]=none
#     ZSH_HIGHLIGHT_STYLES[hashed-command]=fg=037
#     ZSH_HIGHLIGHT_STYLES[path]=fg=166,underline
#     ZSH_HIGHLIGHT_STYLES[globbing]=fg=033
#     ZSH_HIGHLIGHT_STYLES[history-expansion]=fg=white,underline
#     ZSH_HIGHLIGHT_STYLES[single-hyphen-option]=fg=125,bold
#     ZSH_HIGHLIGHT_STYLES[double-hyphen-option]=fg=125,bold
#     ZSH_HIGHLIGHT_STYLES[back-quoted-argument]=none
#     ZSH_HIGHLIGHT_STYLES[single-quoted-argument]=fg=136
#     ZSH_HIGHLIGHT_STYLES[double-quoted-argument]=fg=136
#     ZSH_HIGHLIGHT_STYLES[dollar-double-quoted-argument]=fg=136
#     ZSH_HIGHLIGHT_STYLES[back-double-quoted-argument]=fg=136
#     ZSH_HIGHLIGHT_STYLES[assign]=fg=037
# fi

# # dircolors
# if [[ "$(tput colors)" == "256" ]]; then
#     eval $(dircolors =(cat ~/.shell/plugins/dircolors-solarized/dircolors.256dark ~/.shell/dircolors.extra))
# fi

# Load fzf completion
[ -f "${XDG_CONFIG_HOME:-$HOME/.config}"/fzf/fzf.zsh ] && source "${XDG_CONFIG_HOME:-$HOME/.config}"/fzf/fzf.zsh
ssource /usr/share/fzf/key-bindings.zsh
ssource /usr/share/fzf/completion.zsh
ssource /usr/share/doc/fzf/examples/key-bindings.zsh
ssource /usr/share/doc/fzf/examples/completion.zsh
ssource /opt/homebrew/opt/fzf/shell/completion.zsh
ssource /opt/homebrew/opt/fzf/shell/key-bindings.zsh

# # Enable starship prompt.
# if command -v starship >/dev/null 2>&1; then
#     eval "$(starship init zsh)"
# fi

# Enable direnv.
if command -v direnv >/dev/null 2>&1; then
    eval "$(direnv hook zsh)"
fi

# Enable NVM
ssource "$NVM_DIR/nvm.sh"

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('$HOME/mambaforge/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "$HOME/mambaforge/etc/profile.d/conda.sh" ]; then
        . "$HOME/mambaforge/etc/profile.d/conda.sh"
    else
        pathprepend "$HOME/mambaforge/bin" PATH
    fi
fi
unset __conda_setup

if [ -f "$HOME/mambaforge/etc/profile.d/mamba.sh" ]; then
    . "$HOME/mambaforge/etc/profile.d/mamba.sh"
fi
# <<< conda initialize <<<

# >>> mamba initialize >>>
# !! Contents within this block are managed by 'mamba init' !!
export MAMBA_EXE="$HOME/.local/bin/micromamba";
export MAMBA_ROOT_PREFIX="$HOME/micromamba";
__mamba_setup="$("$MAMBA_EXE" shell hook --shell zsh --root-prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__mamba_setup"
else
    alias micromamba="$MAMBA_EXE"  # Fallback on help from mamba activate
fi
unset __mamba_setup
# <<< mamba initialize <<<
