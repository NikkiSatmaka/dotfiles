# XDG Base Directory
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_STATE_HOME="$HOME/.local/state"
export XDG_DATA_DIRS="/usr/local/share:/usr/share:/var/lib/flatpak/exports/share:$HOME/.local/share/flatpak/exports/share"
export XDG_CONFIG_DIRS="/etc/xdg"

# Preferred programs
export TERM=xterm-256color
export TERMINAL=kitty
export READER=zathura
export VIDEO=mpv
export IMAGE=sxiv
export FILE=nnn
export COLORTERM=truecolor
export OPENER=xdg-open
# export WM=bspwm
# export BROWSER=brave
# if [ -n "$DISPLAY" ]; then
# 	export BROWSER="brave"
# else
# 	export BROWSER="w3m"
# fi

# ~/ Clean-up:
#export XAUTHORITY="$XDG_RUNTIME_DIR/Xauthority" # This line will break some DMs.
export BASH_COMPLETION_USER_FILE="${XDG_CONFIG_HOME:-$HOME/.config}/bash-completion/bash_completion"
export NOTMUCH_CONFIG="${XDG_CONFIG_HOME:-$HOME/.config}/notmuch/notmuchrc"
export NMBGIT="${XDG_DATA_HOME:-$HOME/.local/share}/notmuch/nmbug"
export GTK2_RC_FILES="${XDG_CONFIG_HOME:-$HOME/.config}/gtk-2.0/gtkrc-2.0"
export WGETRC="${XDG_CONFIG_HOME:-$HOME/.config}/wget/wgetrc"
export INPUTRC="${XDG_CONFIG_HOME:-$HOME/.config}/readline/inputrc"
export HTTPIE_CONFIG_DIR="${XDG_CONFIG_HOME:-$HOME/.config}/httpie"
export IPYTHONDIR="${XDG_CONFIG_HOME:-$HOME/.config}/jupyter"
export JUPYTER_CONFIG_DIR="${XDG_CONFIG_HOME:-$HOME/.config}/jupyter"
export ALSA_CONFIG_PATH="${XDG_CONFIG_HOME:-$HOME/.config}/alsa/asoundrc"
export KODI_DATA="${XDG_DATA_HOME:-$HOME/.local/share}/kodi"
export PASSWORD_STORE_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/pass"
export TMUX_TMPDIR="$XDG_RUNTIME_DIR"
export GOKU_EDN_CONFIG_FILE="${XDG_CONFIG_HOME:-$HOME/.config}/karabiner/karabiner.edn"
export STARSHIP_CONFIG="${XDG_CONFIG_HOME:-$HOME/.config}/starship/config.toml"
export FFMPEG_DATADIR="${XDG_CONFIG_HOME:-$HOME/.config}/ffmpeg"

# GnuPG
# export GNUPGHOME="${XDG_DATA_HOME:-$HOME/.local/share}/gnupg"

# Other program settings:
export DICS="/usr/share/stardict/dic/"
#export SUDO_ASKPASS="$HOME/.local/bin/dmenupass"
export FZF_DEFAULT_OPTS="--layout=reverse --height 40%"
export LESSOPEN="| /usr/bin/highlight -O ansi %s 2>/dev/null"
export QT_QPA_PLATFORMTHEME="gtk2"	# Have QT use gtk2 theme.
export MOZ_USE_XINPUT2="1"		# Mozilla smooth scrolling/touchpads.
export KAGGLE_CONFIG_DIR="${XDG_CONFIG_HOME:-$HOME/.config}/kaggle"		# Kaggle API credentials

# java fixes
export _JAVA_AWT_WM_NONREPARENTING=1

# npm
export NPM_CONFIG_USERCONFIG="${XDG_CONFIG_HOME:-$HOME/.config}/npm/npmrc"
export NVM_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/nvm"
export PNPM_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/pnpm"

# docker
export DOCKER_CONFIG="${XDG_CONFIG_HOME:-$HOME/.config}/docker"
export MACHINE_STORAGE_PATH="${XDG_DATA_HOME:-$HOME/.local/share}/docker-machine"

# rust
export CARGO_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/cargo"
export RUSTUP_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/rustup"

# ruby
export GEM_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/gem"
export GEM_SPEC_CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/gem"
export BUNDLE_USER_CONFIG="${XDG_CONFIG_HOME:-$HOME/.config}/bundle"
export BUNDLE_USER_CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/bundle"
export BUNDLE_USER_PLUGIN="${XDG_DATA_HOME:-$HOME/.local/share}/bundle"

# go
export GOPATH="${XDG_DATA_HOME:-$HOME/.local/share}/go"

# haskell
export CABAL_CONFIG="${XDG_CONFIG_HOME:-$HOME/.config}/cabal/config"
export CABAL_DIR="${XDG_CACHE_HOME:-$HOME/.cache}/cabal"
export STACK_ROOT="${XDG_DATA_HOME:-$HOME/.local/share}/stack"

# latex
export TEXMFHOME="${XDG_DATA_HOME:-$HOME/.local/share}/texmf"
export TEXMFVAR="${XDG_CACHE_HOME:-$HOME/.cache}/texlive/texmf-var"
export TEXMFCONFIG="${XDG_CONFIG_HOME:-$HOME/.config}/texlive/texmf-config"
export TEXMACS_HOME_PATH="${XDG_STATE_HOME:-$HOME/.local/state}/texmacs"

# electron
# export ELECTRON_TRASH=trash-cli code

# Android SDK
export ANDROID_HOME="${XDG_CONFIG_HOME:-$HOME/.config}/android"
export ANDROID_SDK_HOME="${XDG_CONFIG_HOME:-$HOME/.config}/android"
export ANDROID_SDK_ROOT="${XDG_CONFIG_HOME:-$HOME/.config}/android"
export ADB_VENDOR_KEY="${XDG_CONFIG_HOME:-$HOME/.config}/android"

# Fcitx Input Module
GTK_IM_MODULE=fcitx
QT_IM_MODULE=fcitx
XMODIFIERS="@im=fcitx"
SDL_IM_MODULE=fcitx
GLFW_IM_MODULE=ibus

# Doom emacs
export DOOMDIR="${XDG_CONFIG_HOME:-$HOME/.config}/doom"

# Wine
export WINEPREFIX="${XDG_DATA_HOME:-$HOME/.local/share}/wineprefixes/default"
export FREETYPE_PROPERTIES="truetype:interpreter-version=40"

# Xmonad
XMONAD_CACHE_DIR="${XDG_CACHE_HOME:-$HOME/.cache}/xmonad"
XMONAD_CONFIG_DIR="${XDG_CONFIG_HOME:-$HOME/.config}/xmonad"
XMONAD_DATA_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/xmonad"

# AWS
export AWS_SHARED_CREDENTIALS_FILE="${XDG_CONFIG_HOME:-$HOME/.config}/aws/credentials"
export AWS_CONFIG_FILE="${XDG_CONFIG_HOME:-$HOME/.config}/aws/config"

# FFF file manager
export FFF_HIDDEN=0

export FFF_KEY_SCROLL_UP2='off'
export FFF_KEY_SCROLL_DOWN2='off'
export FFF_KEY_PARENT2='off'
export FFF_KEY_CHILD2='off'

if command -v trash-put >/dev/null 2>&1; then
	export FFF_TRASH_CMD='trash-put'
else
	export FFF_TRASH_CMD='mv'
fi

# NNN file manager
export NNN_USE_EDITOR=1
export NNN_OPENER=xdg-open
export NNN_TRASH=1
export NNN_COLORS="1234"
export NNN_PLUG='o:fzopen;C:diffs;v:imgview;i:imgur;p:pdfview;m:mediainf;d:dragdrop;e:unarchive;s:suedit;c:cpfile'

# Calibre Ebook Management
export CALIBRE_USE_DARK_PALETTE=1

# This is the list for lf icons:
export LF_ICONS="di=📁:\
fi=📃:\
tw=🤝:\
ow=📂:\
ln=⛓:\
or=❌:\
ex=🎯:\
*.txt=✍:\
*.mom=✍:\
*.me=✍:\
*.ms=✍:\
*.png=🖼:\
*.ico=🖼:\
*.jpg=📸:\
*.jpeg=📸:\
*.gif=🖼:\
*.svg=🗺:\
*.xcf=🖌:\
*.html=🌎:\
*.xml=📰:\
*.gpg=🔒:\
*.css=🎨:\
*.pdf=📚:\
*.djvu=📚:\
*.epub=📚:\
*.csv=📓:\
*.xlsx=📓:\
*.tex=📜:\
*.md=📘:\
*.r=📊:\
*.R=📊:\
*.rmd=📊:\
*.Rmd=📊:\
*.mp3=🎵:\
*.opus=🎵:\
*.ogg=🎵:\
*.m4a=🎵:\
*.flac=🎼:\
*.mkv=🎥:\
*.mp4=🎥:\
*.webm=🎥:\
*.mpeg=🎥:\
*.avi=🎥:\
*.zip=📦:\
*.rar=📦:\
*.7z=📦:\
*.tar.gz=📦:\
*.z64=🎮:\
*.v64=🎮:\
*.n64=🎮:\
*.1=ℹ:\
*.nfo=ℹ:\
*.info=ℹ:\
*.log=📙:\
*.iso=📀:\
*.img=📀:\
*.bib=🎓:\
*.ged=👪:\
*.part=💔:\
*.torrent=🔽:\
"

# Path settings
pathprepend "$HOME/.local/bin" PATH
pathprepend "$HOME/.local/bin/bspwm" PATH
pathprepend "$HOME/.local/bin/i3" PATH
pathprepend "$HOME/.local/bin/lf" PATH
pathprepend "$HOME/.local/bin/polybar" PATH
pathprepend "$HOME/.emacs.d/bin" PATH
pathprepend "${XDG_CONFIG_HOME:-$HOME/.config}/emacs/bin" PATH
pathprepend "/usr/local/go/bin" PATH
pathprepend "/usr/local/plan9/bin" PATH
pathprepend "/usr/lib/w3m" PATH
pathprepend "/usr/local/sbin" PATH
pathprepend "${XDG_DATA_HOME:-$HOME/.local/share}/cargo/bin" PATH
pathprepend "${XDG_DATA_HOME:-$HOME/.local/share}/gem/bin" PATH
pathprepend "${XDG_DATA_HOME:-$HOME/.local/share}/go/bin" PATH
pathprepend "${XDG_DATA_HOME:-$HOME/.local/share}/npm/bin" PATH
pathprepend "$PNPM_HOME" PATH
pathprepend "$ANDROID_HOME/platform-tools" PATH
{{- if eq .chezmoi.os "darwin" }}
pathprepend "/usr/local/opt/python/libexec/bin" PATH
pathprepend "$HOME/Library/Python/3.7/bin" PATH
{{- end }}

# Switch escape and caps if tty and no passwd required:
sudo -n loadkeys "${XDG_DATA_HOME:-$HOME/.local/share}/kbd/keymaps/ttymaps.kmap" 2>/dev/null

# Enable linuxbrew.
test -x ~/.linuxbrew/bin/brew && eval "$(~/.linuxbrew/bin/brew shellenv)"
test -x /home/linuxbrew/.linuxbrew/bin/brew && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
