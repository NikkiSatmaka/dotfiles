#!/usr/bin/env sh

#==============================================================================
# main (essential) packages & fonts
#==============================================================================

### OPTIONS AND VARIABLES ###

readonly AUR_URL='https://aur.archlinux.org/cgit/aur.git/snapshot'
readonly AUR_HELPER='yay'
readonly SRC_DIR="$HOME/.local/src"
readonly PKGS_ARCH="$HOME/.local/share/chezmoi/pkgs-arch"
readonly PKGS_BREW_TAP="$HOME/.local/share/chezmoi/pkgs-brew-tap"
readonly PKGS_BREW_CASK="$HOME/.local/share/chezmoi/pkgs-brew-cask"
readonly PKGS_BREW="$HOME/.local/share/chezmoi/pkgs-brew"
readonly PKGS_AUR="$HOME/.local/share/chezmoi/pkgs-aur"

### FUNCTIONS ###

echoerrcolor() {
	if (( $colors )); then
		case $1 in
			none)
				str="\e[0;37m"
				;;
			green)
				str="\e[0;32m"
				;;
			red)
				str="\e[0;31m"
				;;
			blue)
				str="\e[1;34m"
				;;
			darkcyan)
				str="\e[0;36m"
				;;
			darkgreen)
				str="\e[1;32m"
				;;
			darkred)
				str="\e[1;31m"
				;;
			magenta)
				str="\e[0;35m"
				;;
			darkmagenta)
				str="\e[1;35m"
				;;

		esac
		echo -ne $str >&2;
	fi
}

echoerrnocolor() {
	if (( $colors )); then
		echo -ne "\e[0m" >&2;
	fi
}

echoerr() {
	if [ $# -gt 1 ]; then
		color=$1
		shift
		echoerrcolor $color
	fi
	echo "$@" >&2;
	if [ $color ]; then
		echoerrnocolor
	fi
}

printferr() { printf "$@" >&2; }

if command -v apt >/dev/null 2>&1; then
	install_pkg() {
		sudo apt-get install -y "$1"
	}
elif command -v pacman >/dev/null 2>&1; then
	distro="arch"
	install_pkg() {
		sudo pacman --noconfirm --needed -S "$1"
	}
fi

refreshkeys() {
	echo "Refreshing Arch Keyring..."
	sudo pacman --noconfirm -S archlinux-keyring >/dev/null 2>&1
}

# aur install using tar method
manual_install() {
	if command -v "$1" >/dev/null 2>&1; then
		echo "$1 already installed. skipping"
	else
		cd /tmp || exit
		rm -rf /tmp/"$1"*
		curl -LO "$AUR_URL/$1.tar.gz" &&
		tar -xvf "$1".tar.gz >/dev/null 2>&1 &&
		cd "$1" &&
		makepkg -si --noconfirm >/dev/null 2>&1
		cd /tmp || return
	fi
}


main_install() {
	install_pkg "$1"
}

aur_install() {
	echo "$aur_installed" | grep "^$1$" >/dev/null 2>&1 && return
	"$AUR_HELPER" -S --noconfirm "$1"
}

pip_install() {
	if command -v pip >/dev/null 2>&1; then
		:
	else
		install_pkg python-pip
	fi
	pip install "$1"
}


installation_loop() {
	[ -f "$2" ] && cp -f "$2" /tmp/pkgs
	sed '/^#/d' "$2" | sed '/^$/d' > /tmp/pkgs
	aur_installed="$(pacman -Qqm)"
	while read -r package; do
		case "$1" in
			"aur") aur_install "$package" ;;
			"apt"|"pacman") main_install "$package" ;;
			"pip") pip_install "$package" ;;
		esac
	done < /tmp/pkgs
}

systembeepoff() {
	rmmod pcspkr
	echo "blacklist pcspkr" > /etc/modprobe.d/nobeep.conf
}

### THE ACTUAL SCRIPT ###

echo "The script is starting"

refreshkeys

# install_pkg base-devel
# install_pkg pacman-contrib
install_pkg curl
install_pkg git
install_pkg ntp

if [ "$distro" = arch ]; then

	# Make pacman and yay colorful and adds eye candy on the progress bar
	if grep "^Color" /etc/pacman.conf >/dev/null; then
		:
	else
		sudo sed -i "s/^#Color$/Color/" /etc/pacman.conf
	fi

	if grep "ILoveCandy" /etc/pacman.conf >/dev/null; then
		:
	else
		sudo sed -i "/#VerbosePkgLists/a ILoveCandy" /etc/pacman.conf
	fi

	manual_install "$AUR_HELPER"

	sudo pacman -Syu

	aur_install libxft-bgra

fi

installation_loop aur "$PKGS_AUR"

installation_loop pacman "$PKGS_ARCH"
